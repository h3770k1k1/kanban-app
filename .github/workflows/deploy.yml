name: Deploy to AWS EC2

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-central-1

      - name: Launch EC2 instance
        run: |
          INSTANCE_ID=$(aws ec2 run-instances \
            --image-id ami-06ee6255945a96aba \
            --instance-type t2.micro \
            --key-name key1 \
            --security-groups launch-wizard-2 \
            --count 1 \
            --query 'Instances[0].InstanceId' \
            --output text \
            --user-data "#!/bin/bash
            sudo dnf update -y
            sudo dnf install -y docker
            sudo systemctl enable --now docker
            sudo usermod -aG docker ec2-user
            newgrp docker
            docker run -d -p 80:80 h3ll0k1k1/myapp:latest") 

          echo "Waiting for instance to be ready..."
          aws ec2 wait instance-running --instance-ids $INSTANCE_ID

          PUBLIC_IP=$(aws ec2 describe-instances \
            --instance-ids $INSTANCE_ID \
            --query 'Reservations[0].Instances[0].PublicIpAddress' \
            --output text)

          echo "Instance is running at: $PUBLIC_IP"
          echo "PUBLIC_IP=$PUBLIC_IP" >> $GITHUB_ENV

      - name: Add SSH key
        run: |
          echo "${{ secrets.AWS_SSH_PRIVATE_KEY }}" > /tmp/key1.pem
          chmod 600 /tmp/key1.pem

      - name: Connect to EC2 and Deploy
        run: |
          ssh -o StrictHostKeyChecking=no -i /tmp/key1.pem ec2-user@$PUBLIC_IP << 'EOF'
            docker pull h3ll0k1k1/myapp:latest
            docker stop myapp || true
            docker rm myapp || true
            docker run -d -p 80:80 --name myapp h3ll0k1k1/myapp:latest
          EOF
